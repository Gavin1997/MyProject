{"remainingRequest":"C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00\\src\\main.js","dependencies":[{"path":"C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00\\src\\main.js","mtime":1540565550974},{"path":"C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853417988},{"path":"C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport Qs from 'qs';\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//Vue.http.options.emulateJSON = true;\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //引入vuex组建\n\nimport Vuex from \"vuex\"; //注册\n\nVue.use(Vuex); //创建vuex的对象:共享数据,操作方法,获取并监听数据的方法\n\nvar store = new Vuex.Store({\n  state: {\n    //共享的数据\n    carCount: 0 //购物车中的数量\n\n  },\n  mutations: {\n    //操作共享数据的方法\n    increment: function increment(state, count) {\n      state.carCount += count;\n    },\n    substract: function substract(state, count) {\n      state.carCount -= count;\n\n      if (state.carCount <= 0) {\n        state.carCount = 0;\n      }\n    },\n    clearcount: function clearcount(state) {\n      state.carCount = 0;\n    }\n  },\n  getters: {\n    //获取并监听数据的方法\n    optCount: function optCount(state) {\n      return state.carCount;\n    }\n  }\n}); //main.js\n//1.引入Header组件\n\nimport { Header, Button, Tabbar, TabItem } from \"mint-ui\"; //2.注册        标签名称     组件对象\n\nVue.component(Header.name, Header);\nVue.component(Button.name, Button);\nVue.component(Tabbar.name, Tabbar);\nVue.component(TabItem.name, TabItem); //引入Swipe 轮播组件\n\nimport { Swipe, SwipeItem } from \"mint-ui\";\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem); //3.引入vueResource 到当前项目中\n\nimport VueResource from \"vue-resource\"; //加载\n\nVue.use(VueResource); //5.定义全局过滤器(日期)\n//第三方模块 moment 过滤器日期\n//-自定义  //过滤器名             用户日期\n\nVue.filter(\"dateFormat\", function (datestr) {\n  var pattern = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"YYY-MM-DD\";\n  return new Date(datestr).toLocaleString();\n});\nVue.filter(\"ellipse\", function (val, len) {\n  if (val.length <= len) {\n    return val;\n  } else {\n    return val.slice(0, len) + \".....\";\n  }\n}); //引入axios\n\nimport axios from 'axios';\nVue.prototype.$axios = axios; //设置axios-ajax访问记基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:3000/\"; //设置axios-ajx访问格式\n\naxios.defaults.headers = {\n  'Content-Type': 'application/x-www-form-urlencoded' //6.全局的ajax访问基础路径  Vue-Resource\n\n};\nVue.http.options.root = \"http://127.0.0.1:3000/\"; //7.设置全局ajax post访问格式\n\nVue.http.options.emulateJSON = true;\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //将Vuex对象注册到vue对象中\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","Qs","config","productionTip","Vuex","use","store","Store","state","carCount","mutations","increment","count","substract","clearcount","getters","optCount","Header","Button","Tabbar","TabItem","component","name","Swipe","SwipeItem","VueResource","filter","datestr","pattern","Date","toLocaleString","val","len","length","slice","axios","prototype","$axios","defaults","baseURL","headers","http","options","root","emulateJSON","render","h","$mount"],"mappings":"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","sourceRoot":"C:\\Users\\alienware\\Desktop\\MyProject\\vue_app_00","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport Qs from 'qs'\r\n\r\n\r\nimport 'mint-ui/lib/style.css'\r\n\r\n\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n//Vue.http.options.root = \"http://127.0.0.1/vue_ser/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//Vue.http.options.emulateJSON = true;\r\n// 导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//引入vuex组建\r\nimport Vuex from \"vuex\";\r\n//注册\r\nVue.use(Vuex);\r\n\r\n//创建vuex的对象:共享数据,操作方法,获取并监听数据的方法\r\nvar store = new Vuex.Store({\r\n    state:{   //共享的数据\r\n        carCount:0  //购物车中的数量\r\n    },        \r\n    mutations:{   //操作共享数据的方法\r\n      increment(state,count){\r\n          state.carCount+=count;\r\n      },\r\n      substract(state,count){\r\n        state.carCount-=count;\r\n        if(state.carCount<=0){\r\n            state.carCount=0;\r\n        }\r\n      },\r\n      clearcount(state){\r\n        state.carCount=0;\r\n      }\r\n    },    \r\n    getters:{ //获取并监听数据的方法\r\n        optCount:function(state){\r\n            return state.carCount\r\n        }\r\n    }       \r\n});\r\n\r\n\r\n\r\n//main.js\r\n//1.引入Header组件\r\nimport {\r\n    Header,\r\n    Button,\r\n    Tabbar,\r\n    TabItem\r\n} from \"mint-ui\"\r\n//2.注册        标签名称     组件对象\r\nVue.component(Header.name, Header);\r\nVue.component(Button.name, Button);\r\nVue.component(Tabbar.name, Tabbar);\r\nVue.component(TabItem.name, TabItem);\r\n//引入Swipe 轮播组件\r\nimport {\r\n    Swipe,\r\n    SwipeItem\r\n} from \"mint-ui\"\r\nVue.component(Swipe.name, Swipe);\r\nVue.component(SwipeItem.name, SwipeItem);\r\n//3.引入vueResource 到当前项目中\r\nimport VueResource from \"vue-resource\"\r\n//加载\r\nVue.use(VueResource)\r\n//5.定义全局过滤器(日期)\r\n//第三方模块 moment 过滤器日期\r\n//-自定义  //过滤器名             用户日期\r\nVue.filter(\"dateFormat\", function (datestr, pattern = \"YYY-MM-DD\") {\r\n    return new Date(datestr).toLocaleString();\r\n})\r\nVue.filter(\"ellipse\", function (val, len) {\r\n    if (val.length <= len) {\r\n        return val;\r\n    } else {\r\n        return val.slice(0, len) + \".....\"\r\n    }\r\n})\r\n\r\n//引入axios\r\nimport axios from 'axios'\r\nVue.prototype.$axios = axios;\r\n//设置axios-ajax访问记基础路径\r\naxios.defaults.baseURL = \"http://127.0.0.1:3000/\"\r\n//设置axios-ajx访问格式\r\naxios.defaults.headers = {\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n}\r\n\r\n//6.全局的ajax访问基础路径  Vue-Resource\r\nVue.http.options.root = \"http://127.0.0.1:3000/\"\r\n//7.设置全局ajax post访问格式\r\nVue.http.options.emulateJSON = true;\r\n\r\nnew Vue({\r\n    router,\r\n    render: h => h(App),\r\n    store  //将Vuex对象注册到vue对象中\r\n}).$mount('#app')"]}]}